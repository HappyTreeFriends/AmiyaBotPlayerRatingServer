apiVersion: apps/v1
kind: Deployment
metadata:
  name: amiya-bot-player-rating-server
  namespace: amiya-bot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: amiya-bot-player-rating-server
  template:
    metadata:
      labels:
        app: amiya-bot-player-rating-server
    spec:
      containers:
        - command:
            - dotnet
            - AmiyaBotPlayerRatingServer.dll
          env:
            - name: DOTNET_RUNNING_IN_CONTAINER
              value: 'true'
            - name: DOTNET_USE_POLLING_FILE_WATCHER
              value: 'true'
            - name: NUGET_XMLDOC_MODE
              value: skip
            - name: POWERSHELL_DISTRIBUTION_CHANNEL
              value: PSDocker-DotnetSDK-Debian-10
            - name: TZ
              value: Asia/Shanghai
          image: harbor.hsyhhssyy.net/home-esxi/amiya-bot-player-rating-server:1
          imagePullPolicy: Always
          name: amiya-bot-player-rating-server
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: Blank
              port: 80
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /app/Resources/amiya-bot-assets
              name: amiya-bot-assets
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      volumes:
        - name: amiya-bot-assets
          nfs:
            server: 192.168.31.25
            path: /mnt/raid1-pool1/amiya-bot/RatingServer/Assets
      imagePullSecrets:
        - name: harbor.hsyhhssyy.net

---

apiVersion: v1
kind: Service
metadata:
  name: amiya-bot-player-rating-server-service
  namespace: amiya-bot
spec:
  selector:
    app: amiya-bot-player-rating-server
  ports:
  - name: port-80
    protocol: TCP
    port: 80
    targetPort: 80

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: amiya-bot-rating-server-ingress
  namespace: amiya-bot
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
spec:
  tls:
    - hosts:
        - amiya-bot-service.hsyhhssyy.net
      secretName: amiya-bot-service.hsyhhssyy.net.tls
  rules:
  - host: amiya-bot-service.hsyhhssyy.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: amiya-bot-player-rating-server-service-website
            port:
              number: 80
      - path: /api/
        pathType: Prefix
        backend:
          service:
            name: amiya-bot-player-rating-server-service
            port:
              number: 80   
      - path: /gamehub
        pathType: Prefix
        backend:
          service:
            name: amiya-bot-player-rating-server-service
            port:
              number: 80      
      - path: /connect/
        pathType: Prefix
        backend:
          service:
            name: amiya-bot-player-rating-server-service
            port:
              number: 80
